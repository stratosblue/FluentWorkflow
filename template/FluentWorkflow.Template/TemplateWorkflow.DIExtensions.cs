// <Auto-Generated/>
using System.ComponentModel;
using FluentWorkflow;
using FluentWorkflow.Interface;
using Microsoft.Extensions.DependencyInjection.Extensions;
using TemplateNamespace;
using TemplateNamespace.Handler;
using TemplateNamespace.Message;

namespace Microsoft.Extensions.DependencyInjection;

/// <summary>
/// 
/// </summary>
[EditorBrowsable(EditorBrowsableState.Never)]
public static class TemplateWorkflowDIExtensions
{
    /// <summary>
    /// 添加 <see cref="TemplateWorkflow"/> 的构造器
    /// </summary>
    /// <param name="builder"></param>
    /// <returns></returns>
    public static IFluentWorkflowBuilder AddTemplateWorkflow(this IFluentWorkflowBuilder builder) => builder.AddTemplateWorkflow<TemplateWorkflow>();

    /// <summary>
    /// 添加 <see cref="TemplateWorkflow"/> 的构造器，使用 <typeparamref name="TWorkflow"/> 替代 <see cref="TemplateWorkflow"/>
    /// </summary>
    /// <typeparam name="TWorkflow"></typeparam>
    /// <param name="builder"></param>
    /// <returns></returns>
    public static IFluentWorkflowBuilder AddTemplateWorkflow<TWorkflow>(this IFluentWorkflowBuilder builder)
        where TWorkflow : TemplateWorkflow
    {
        builder.Services.TryAdd(ServiceDescriptor.Describe(typeof(IWorkflowBuilder<TemplateWorkflow>), typeof(TemplateWorkflowBuilder<TWorkflow>), ServiceLifetime.Scoped));
        builder.Services.TryAdd(ServiceDescriptor.Describe(typeof(IWorkflowBuilder<TWorkflow>), typeof(TemplateWorkflowBuilder<TWorkflow>), ServiceLifetime.Scoped));
        return builder;
    }

    /// <summary>
    /// 添加 <see cref="TemplateWorkflow"/> 的结果观察器 <see cref="TemplateWorkflowResultObserver"/>
    /// </summary>
    /// <param name="builder"></param>
    /// <returns></returns>
    public static IFluentWorkflowBuilder AddTemplateWorkflowResultObserver(this IFluentWorkflowBuilder builder) => builder.AddTemplateWorkflowResultObserver<TemplateWorkflowResultObserver>();

    /// <summary>
    /// 添加 <see cref="TemplateWorkflow"/> 的结果观察器，使用 <typeparamref name="TWorkflowResultObserver"/> 替代默认的 <see cref="TemplateWorkflowResultObserver"/>
    /// </summary>
    /// <param name="builder"></param>
    /// <returns></returns>
    public static IFluentWorkflowBuilder AddTemplateWorkflowResultObserver<TWorkflowResultObserver>(this IFluentWorkflowBuilder builder)
        where TWorkflowResultObserver : TemplateWorkflowResultObserverBase
    {
        builder.WorkflowBuildStates.AddEventInvokerDescriptor<TemplateWorkflow, TWorkflowResultObserver, TemplateWorkflowFinishedMessage, ITemplateWorkflow>();

        builder.Services.TryAdd(ServiceDescriptor.Describe(typeof(IWorkflowResultObserver<TemplateWorkflow>), typeof(TWorkflowResultObserver), ServiceLifetime.Scoped));
        builder.Services.TryAdd(ServiceDescriptor.Describe(typeof(TWorkflowResultObserver), typeof(TWorkflowResultObserver), ServiceLifetime.Scoped));
        return builder;
    }
}
