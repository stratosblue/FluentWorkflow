// <Auto-Generated/>
using DotNetCore.CAP;
using TemplateNamespace.Template.Message;

namespace TemplateNamespace.Template.Handler;

partial class StageStage1CAUKHandlerBase : ICapSubscribe
{
    /// <summary>
    /// 处理消息 <inheritdoc cref="StageStage1CAUKMessage.EventName"/>
    /// </summary>
    /// <param name="message"></param>
    /// <param name="cancellationToken"></param>
    /// <returns></returns>
    [CapSubscribe(StageStage1CAUKMessage.EventName)]
    public virtual Task HandleMessageAsync(StageStage1CAUKMessage message, CancellationToken cancellationToken)
    {
        return HandleAsync(message, cancellationToken);
    }
}

partial class StageStage2BPTGHandlerBase : ICapSubscribe
{
    /// <summary>
    /// 处理消息 <inheritdoc cref="StageStage2BPTGMessage.EventName"/>
    /// </summary>
    /// <param name="message"></param>
    /// <param name="cancellationToken"></param>
    /// <returns></returns>
    [CapSubscribe(StageStage2BPTGMessage.EventName)]
    public virtual Task HandleMessageAsync(StageStage2BPTGMessage message, CancellationToken cancellationToken)
    {
        return HandleAsync(message, cancellationToken);
    }
}

partial class StageStage3AWBNHandlerBase : ICapSubscribe
{
    /// <summary>
    /// 处理消息 <inheritdoc cref="StageStage3AWBNMessage.EventName"/>
    /// </summary>
    /// <param name="message"></param>
    /// <param name="cancellationToken"></param>
    /// <returns></returns>
    [CapSubscribe(StageStage3AWBNMessage.EventName)]
    public virtual Task HandleMessageAsync(StageStage3AWBNMessage message, CancellationToken cancellationToken)
    {
        return HandleAsync(message, cancellationToken);
    }
}
