// <Auto-Generated/>

// 源代码生成器生成的标记类型集合

// 已定义无声明类型时不添加
#if !NO_FLUENTWORKFLOW_DECLARATION_TYPES

#pragma warning disable IDE0060
#pragma warning disable IDE0130
#pragma warning disable IDE0290

using System.ComponentModel;

namespace FluentWorkflow;

#region interfaces

/// <summary>
/// 工作流程上下文声明器
/// </summary>
[EditorBrowsable(EditorBrowsableState.Never)]
internal interface IWorkflowContextDeclarator
{
    #region Public 方法

    /// <summary>
    /// 声明上下文包含一个类型为 <typeparamref name="T"/> 的属性 <paramref name="propertyName"/>
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <param name="propertyName">属性名称</param>
    /// <param name="comment">注释</param>
    /// <returns></returns>
    IWorkflowContextDeclarator Property<T>(string propertyName, string? comment = null);

    #endregion Public 方法
}

/// <summary>
/// 工作流程声明器，声明工作流程细节
/// </summary>
[EditorBrowsable(EditorBrowsableState.Never)]
internal interface IWorkflowDeclarator
{
    #region Public 方法

    /// <summary>
    /// 声明工作流程的名称为 <paramref name="workflowName"/>
    /// </summary>
    /// <param name="workflowName"></param>
    /// <returns></returns>
    IWorkflowStageDeclarator Name(string workflowName);

    #endregion Public 方法
}

/// <summary>
/// 工作流程阶段声明器，声明工作流程的阶段信息
/// </summary>
[EditorBrowsable(EditorBrowsableState.Never)]
internal interface IWorkflowStageDeclarator
{
    #region Public 方法

    /// <summary>
    /// 开始声明工作流程的流程信息
    /// </summary>
    /// <returns></returns>
    IWorkflowStageStepDeclarator Begin();

    #endregion Public 方法
}

/// <summary>
/// 工作流程阶段步骤声明器，声明工作流程的阶段步骤信息
/// </summary>
[EditorBrowsable(EditorBrowsableState.Never)]
internal interface IWorkflowStageStepDeclarator
{
    #region Public 方法

    /// <summary>
    /// 完成声明
    /// </summary>
    void Completion();

    /// <summary>
    /// 声明工作流程接下来为一个名为 <paramref name="stageName"/> 的阶段
    /// </summary>
    /// <param name="stageName"></param>
    /// <returns></returns>
    IWorkflowStageStepDeclarator Then(string stageName);

    #endregion Public 方法
}

#endregion interfaces

#region attributes

/// <summary>
/// 工作流程上下文的类型化字段声明特性
/// </summary>
/// <typeparam name="T"></typeparam>
[EditorBrowsable(EditorBrowsableState.Never)]
[AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)]
internal sealed class WorkflowContextTypedPropertyAttribute<T> : Attribute
{
    #region Public 构造函数

    /// <summary>
    /// <inheritdoc cref="WorkflowContextTypedPropertyAttribute{T}"/>
    /// </summary>
    /// <param name="propertyName">属性名称</param>
    /// <param name="comment">注释</param>
    /// <param name="nullable">是否可空</param>
    public WorkflowContextTypedPropertyAttribute(string propertyName, string comment, bool nullable)
    {
    }

    #endregion Public 构造函数
}

/// <summary>
/// 工作流程的定义特性
/// </summary>
[EditorBrowsable(EditorBrowsableState.Never)]
[AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class WorkflowDefineAttribute : Attribute
{
    #region Public 构造函数

    /// <summary>
    /// <inheritdoc cref="WorkflowDefineAttribute"/>
    /// </summary>
    /// <param name="version">当前的定义版本</param>
    /// <param name="workflowName">工作流程名称</param>
    /// <param name="stages">工作流程的阶段顺序列表</param>
    public WorkflowDefineAttribute(int version, string workflowName, params string[] stages)
    {
    }

    #endregion Public 构造函数
}

#endregion attributes


#endif
